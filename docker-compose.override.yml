version: "3.3"

services:
  backend:
    image: match_backend:dev
    build:
      context: ./backend
      dockerfile: dockerfiles/dev/Dockerfile
    depends_on:
      - db
      - adminer
    environment:
      FLASK_APP: match
      FLASK_ENV: development
    env_file:
      - backend/match/.env.dev
      - backend/match/.env.db_dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app

  test:
    image: match_backend:test
    build:
      context: ./backend
      dockerfile: dockerfiles/test/Dockerfile
    depends_on:
      - db
      - adminer
    entrypoint: ["pytest"]
    environment:
      FLASK_APP: match
      FLASK_ENV: development
    env_file:
      - backend/match/.env.dev
      - backend/match/.env.db_dev
    networks:
      - backend
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app

  frontend:
    image: match_frontend:dev
    build:
      context: ./frontend
      dockerfile: dockerfiles/dev/Dockerfile
    ports:
      - "3000:8080"
    volumes:
      - ./frontend:/app
    tty: true

  db:
    image: postgres:12
    env_file:
      - backend/match/.env.db_dev
    ports:
      - "5432:5432"
    volumes:
      - db_data_dev:/var/lib/postgresql/data

  adminer:
    image: adminer
    networks:
      - backend
    ports:
      - "8080:8080"
    restart: always

volumes:
  db_data_dev:
